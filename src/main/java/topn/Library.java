/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package topn;

import java.util.*;
import java.util.stream.Stream;

public class Library {

    public List<Integer> topN(Stream<Integer> stream, int n) {
        LinkedList<Integer> list = new LinkedList<>();
        stream.forEach(i ->  {
            list.add(getInsertPosition(list, i), i);
            preserveSize(n, list);
        });
        return list;
    }

    /**
     * Get rid of redundant elements, to avoid OOM exception.
     */
    private void preserveSize(int n, LinkedList<Integer> list) {
        if (list.size() > n) {
            list.removeLast();
        }
    }

    /**
     * Look for position to insert new number, so everything would be in order.
     */
    private int getInsertPosition(List<Integer> queue, Integer i) {
        int position = 0;
        for (int index = 0; index < queue.size(); index++) {
            if (queue.get(index) < i) {
                position = index;
                break;
            }
        }
        return position;
    }
}
